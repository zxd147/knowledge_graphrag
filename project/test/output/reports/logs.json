{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183250396694996006678)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183250396694996006678)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183250402851964643413)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183250402851964643413)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183250403068003001770)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183250403068003001770)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183360690242497513612)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183360690242497513612)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 20241122111834939101339200174)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 20241122111834939101339200174)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 202411221118344354724733317618)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 202411221118344354724733317618)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183638383331860403747)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183638383331860403747)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183640695981058523991)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183640695981058523991)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183691834725510086545)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211183691834725510086545)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184056379460171846030)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184056379460171846030)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184112539164507362605)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184112539164507362605)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184132543130916923383)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184132543130916923383)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184886326710383095738)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184886326710383095738)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184998276823788979761)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211184998276823788979761)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 202411221118509786263062460339)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 202411221118509786263062460339)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211185887714685529974071)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211185887714685529974071)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211185998892335183699979)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211185998892335183699979)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211190010216472119652740)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211190010216472119652740)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211190888923278088687546)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211190888923278088687546)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211190999508532405062985)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211190999508532405062985)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211191010690679981044437)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211191010690679981044437)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211191890132874472903276)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211191890132874472903276)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211192038106626070128)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211192038106626070128)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211192011150116642135191)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211192011150116642135191)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211192891381426071539340)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211192891381426071539340)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 20241122111930487856727920129)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 20241122111930487856727920129)', 'type': 'one_api_error'}}", "details": {"input": ["颌面部:颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理", "错畸形:错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决", "牙周疾病:"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211193011662837458800019)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211193011662837458800019)', 'type': 'one_api_error'}}", "details": {"input": ["牙科医疗:牙科医疗是一种提供全面口腔健康服务的医疗机构", "口腔内科:口腔内科是牙科医疗的一个分类，专注于治疗口腔内部疾病", "口腔外科:口腔外科是牙科医疗的一个分类，专注于口腔外部手术", "口腔修复科:口腔修复科是牙科医疗的一个分类，专注于牙齿修复", "口腔正畸科:口腔正畸科是牙科医疗的一个分类，专注于牙齿矫正", "其他分类:其他分类是牙科医疗的一个分类，包括口腔美容等", "龋齿治疗:龋齿治疗是口腔内科的一种治疗项目", "牙髓炎治疗:牙髓炎治疗是口腔内科的一种治疗项目", "根尖周病治疗:根尖周病治疗是口腔内科的一种治疗项目", "牙周疾病治疗:牙周疾病治疗是口腔内科的一种治疗项目", "口腔黏膜疾病治疗:口腔黏膜疾病治疗是口腔内科的一种治疗项目", "牙齿拔除:牙齿拔除是口腔外科的一种治疗项目", "牙种植术:牙种植术是口腔外科的一种治疗项目", "面部小手术:面部小手术是口腔外科的一种治疗项目", "颌面部肿瘤手术:颌面部肿瘤手术是口腔外科的一种治疗项目", "颌面部创伤治疗:颌面部创伤治疗是口腔外科的一种治疗项目"]}}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211193892780245697853553)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211193892780245697853553)', 'type': 'one_api_error'}}", "details": {"input": ["牙齿缺失修复:牙齿缺失修复是口腔修复科的一种治疗项目", "牙列缺失修复:牙列缺失修复是口腔修复科的一种治疗项目", "固定修复:固定修复是口腔修复科的一种治疗项目", "活动性修复:活动性修复是口腔修复科的一种治疗项目", "牙齿矫正:牙齿矫正是口腔正畸科的一种治疗项目牙齿矫正是一种通过牙科医疗中的牙齿矫正来解决牙齿排列不齐的问题", "错畸形的治疗:错畸形的治疗是口腔正畸科的一种治疗项目", "预防性正畸治疗:预防性正畸治疗是一种通过牙科医疗中的预防性正畸治疗来预防牙齿排列问题预防性正畸治疗是口腔正畸科的一种治疗项目", "口腔美容:口腔美容是其他分类的一种治疗项目", "牙齿美白:牙齿美白是其他分类的一种治疗项目牙齿美白是一种通过牙科医疗中的牙齿美白来改善牙齿外观的方法", "牙齿贴面:牙齿贴面是其他分类的一种治疗项目牙齿贴面是一种通过牙科医疗中的牙齿贴面来改善牙齿外观的方法", "牙齿清洁与维护:牙齿清洁与维护是其他分类的一种治疗项目牙齿清洁与维护是一种通过牙科医疗中的牙齿清洁与维护来保持口腔卫生的方法", "牙齿:牙齿是口腔的一部分，也是牙科医疗关注的对象", "牙髓炎:牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决", "根尖周病:根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决", "口腔黏膜:口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护", "面部:面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理"]}}
{"type": "error", "data": "Error executing verb \"text_embed\" in create_final_entities: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211193892780245697853553)', 'type': 'one_api_error'}}", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/datashaper/workflow/workflow.py\", line 415, in _execute_verb\n    result = await result\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/index/verbs/text/embed/text_embed.py\", line 105, in text_embed\n    return await _text_embed_in_memory(\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/index/verbs/text/embed/text_embed.py\", line 130, in _text_embed_in_memory\n    result = await strategy_exec(texts, callbacks, cache, strategy_args)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/index/verbs/text/embed/strategies/openai.py\", line 62, in run\n    embeddings = await _execute(llm, text_batches, ticker, semaphore)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/index/verbs/text/embed/strategies/openai.py\", line 106, in _execute\n    results = await asyncio.gather(*futures)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/index/verbs/text/embed/strategies/openai.py\", line 100, in embed\n    chunk_embeddings = await llm(chunk)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/caching_llm.py\", line 96, in __call__\n    result = await self._delegate(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/rate_limiting_llm.py\", line 177, in __call__\n    result, start = await execute_with_retry()\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/rate_limiting_llm.py\", line 159, in execute_with_retry\n    async for attempt in retryer:\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/tenacity/asyncio/__init__.py\", line 166, in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/tenacity/asyncio/__init__.py\", line 153, in iter\n    result = await action(retry_state)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/tenacity/_utils.py\", line 99, in inner\n    return call(*args, **kwargs)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/tenacity/__init__.py\", line 418, in exc_check\n    raise retry_exc.reraise()\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/tenacity/__init__.py\", line 185, in reraise\n    raise self.last_attempt.result()\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n    return self.__get_result()\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n    raise self._exception\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/rate_limiting_llm.py\", line 165, in execute_with_retry\n    return await do_attempt(), start\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/rate_limiting_llm.py\", line 147, in do_attempt\n    return await self._delegate(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 49, in __call__\n    return await self._invoke(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_embeddings_llm.py\", line 36, in _execute_llm\n    embedding = await self.client.embeddings.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/embeddings.py\", line 215, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1611, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.InternalServerError: Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211193892780245697853553)', 'type': 'one_api_error'}}\n", "source": "Error code: 503 - {'error': {'message': '当前分组 default 下对于模型 ${GRAPHRAG_EMBEDDING_MODEL} 无可用渠道 (request id: 2024112211193892780245697853553)', 'type': 'one_api_error'}}", "details": null}
{"type": "error", "data": "Error Invoking LLM", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_transports/default.py\", line 69, in map_httpcore_exceptions\n    yield\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_transports/default.py\", line 373, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_async/connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_async/connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_async/connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_async/http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_async/http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_async/http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_async/http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_backends/anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpcore/_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1549, in _request\n    response = await self._client.send(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_client.py\", line 1661, in send\n    response = await self._send_handling_auth(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_client.py\", line 1689, in _send_handling_auth\n    response = await self._send_handling_redirects(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_client.py\", line 1726, in _send_handling_redirects\n    response = await self._send_single_request(request)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_client.py\", line 1763, in _send_single_request\n    response = await transport.handle_async_request(request)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_transports/default.py\", line 372, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/httpx/_transports/default.py\", line 86, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/base/base_llm.py\", line 53, in _invoke\n    output = await self._execute_llm(input, **kwargs)\n  File \"/home/zxd/code/Chat/knowledge_graphrag/graphrag/graphrag/llm/openai/openai_chat_llm.py\", line 53, in _execute_llm\n    completion = await self.client.chat.completions.create(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/resources/chat/completions.py\", line 1339, in create\n    return await self._post(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1816, in post\n    return await self.request(cast_to, opts, stream=stream, stream_cls=stream_cls)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1510, in request\n    return await self._request(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/openai/_base_client.py\", line 1568, in _request\n    raise APITimeoutError(request=request) from err\nopenai.APITimeoutError: Request timed out.\n", "source": "Request timed out.", "details": {"input": "\n您是社区分析和网络领域的专家。您擅长绘制关系图、理解组织结构以及识别特定领域内的关键影响者。您擅长帮助人们识别感兴趣社区的关系和结构，特别是在牙科医疗（dental healthcare）领域。\n\n# 目标\n作为牙科医疗的社区分析师，撰写一份全面的社区评估报告。\n\n# 职责：\n社区映射：分析并绘制牙科医疗社区内的关系和结构，重点关注关键影响者、组织和利益相关者。\n识别关键影响者：找出在牙科医疗领域具有重要影响力的个人和实体，包括牙医、牙科卫生员、牙科技师、牙科研究人员和牙科健康组织。\n关系分析：研究牙科医疗社区内不同实体之间的连接，如合作、伙伴关系和专业网络。\n趋势识别：监测和分析牙科医疗领域的趋势，包括技术进步、治疗方法和病人护理实践。\n影响评估：评估社区发展对牙科医疗行业的潜在影响，包括病人护理、行业标准和监管政策的变化。\n报告生成：编写全面的报告，总结社区分析的发现，突出重要发展及其对牙科医疗社区的影响。\n决策支持：根据分析结果为牙科医疗领域的决策者提供见解和建议，帮助他们就战略规划、政策制定和资源分配做出明智决策。\n\n# 技能：\n精通社区映射和关系分析。\n了解牙科医疗实践、技术和法规。\n较强的分析和研究能力。\n能够通过报告和演示有效沟通发现。\n理解牙科医疗行业及其利益相关者。\n在特定领域内识别和分析趋势的经验。\n\n# 报告结构\n报告应包括以下部分：\n\n- 标题：代表其关键实体的社区名称 - 标题应简短但具体。如有可能，请在标题中包含代表性命名实体。\n- 摘要：对社区整体结构的执行摘要，描述其实体之间的关系以及与其实体相关的重要点。\n- 报告评分：一个介于0到10之间的浮动分数，表示文本与牙科医疗、社区分析、网络和病人教育的相关性，1表示微不足道或无关紧要，10表示在促进牙科健康和社区理解方面高度重要、具有影响力和可操作性。\n- 评分解释：给出评分的简短解释一句话。\n- 详细发现：关于该社区的5-10个关键见解列表。每个见解应包含简短总结，后跟多段根据以下规则的解释文本。务必全面。\n\n将输出作为格式良好的JSON格式字符串返回，其中findings需要为列表，格式应如下所示。请不要使用任何不必要的转义序列。输出应为一个单一的JSON对象，便于通过json.loads解析。\n    {{\n        \"title\": <报告标题>,\n        \"summary\": <执行摘要>,\n        \"rating\": <影响严重性评分>,\n        \"rating_explanation\": <评分解释>,\n        \"findings\": [\n            {{\n                \"summary\":<见解_1_摘要>,\n                \"explanation\": <见解_1_说明>\n            }},\n            {{\n                \"summary\":<见解_2_摘要>,\n                \"explanation\": <见解_2_说明>\n            }}\n        ]\n    }}\n\n# 基础规则\n由数据支持的点应按以下方式列出其数据引用：\n\n“这是一句由多个数据引用支持的示例句子[Data: <数据集名称>（记录 ID）; <数据集名称>（记录 ID）]。”\n\n请勿在单个引用中列出超过 5 个记录 ID。相反，请列出前五个最相关的记录 ID，并添加“+more”以指示还有更多。\n\n例如：\n“人员 X 是公司 Y 的所有者，受到许多不当行为指控[Data: 报告（1），实体（5、7）; 关系（23）; 声明（7、2、34、64、46，+more）]。”\n\n其中 1、5、7、23、2、34、46 和 64 分别代表相应数据记录的 ID（而不是索引）。\n\n请勿包括未提供支持证据的信息。\n\n# 示例输入\n-----------\n文本：\n\n实体\n\nid,entity,description\n5、翠绿绿洲广场、翠绿绿洲广场是统一游行的地点。\n6、和谐集会、和谐集会是在翠绿绿洲广场举办游行的组织。\n\n关系\n\nid,source,target,description\n37、翠绿绿洲广场、统一游行、翠绿绿洲广场是统一游行的地点。\n38、翠绿绿洲广场、和谐集会、和谐集会在翠绿绿洲广场举办游行。\n39、翠绿绿洲广场、统一游行、统一游行在翠绿绿洲广场举行。\n40、翠绿绿洲广场、论述聚光灯、论述聚光灯在翠绿绿洲广场举行的统一游行报道。\n41、翠绿绿洲广场、贝利阿萨迪、贝利阿萨迪在翠绿绿洲广场发表了关于游行的讲话。\n43、和谐集会、统一游行、和谐集会组织统一游行。\n\n输出：\n{{\n    \"title\": \"翠绿绿洲广场和统一游行\",\n    \"summary\": \"该社区围绕翠绿绿洲广场展开，这是统一游行的地点。该广场与和谐集会、统一游行和论述聚光灯等实体都有关联，都与游行事件有关。\",\n    \"rating\": 5.0,\n    \"rating_explanation\": \"由于统一游行可能引起动荡或冲突，因此影响严重性评分为中等。\",\n    \"findings\": [\n        {{\n            \"summary\": \"翠绿绿洲广场作为中心位置\",\n            \"explanation\": \"翠绿绿洲广场是这个社区的中心实体，是统一游行的举办地。该广场是所有其他实体之间的共同纽带，表明它在社区中的重要性。广场与游行的关联可能会导致公共秩序紊乱或冲突等问题，具体取决于游行的性质和引发的反应。[Data: 实体（5），关系（37、38、39、40、41，+more）]\"\n        }},\n        {{\n            \"summary\": \"和谐集会在社区中的作用\",\n            \"explanation\": \"和谐集会是这个社区中的另一个关键实体，是翠绿绿洲广场上游行的组织者。和谐集会及其游行的性质可能是潜在威胁的来源，具体取决于它们的目标和引发的反应。和谐集会与广场之间的关系对于理解这个社区的动态至关重要。[Data: 实体（6），关系（38、43）]\"\n        }},\n        {{\n            \"summary\": \"统一游行作为重大事件\",\n            \"explanation\": \"统一游行是在翠绿绿洲广场举行的重大事件。这个事件是社区动态的一个关键因素，可能是潜在威胁的来源，具体取决于游行的性质和引发的反应。游行与广场之间的关系对于理解这个社区的动态至关重要。[Data: 关系（39）]\"\n        }},\n        {{\n            \"summary\": \"论述聚光灯的角色\",\n            \"explanation\": \"论述聚光灯报道了在翠绿绿洲广场举行的统一游行。这表明该事件已经引起了媒体的关注，这可能会放大其对社区的影响。论述聚光灯的作用可能在塑造事件和涉及实体的公众观点方面非常重要。[Data: 关系（40）]\"\n        }}\n    ]\n}}\n\n\n真实数据\n使用以下文本作为您的答案。请不要编造答案。\n\n文本：\n-----Entities-----\nhuman_readable_id,title,description,degree\n30,口腔黏膜,口腔黏膜是口腔内部的黏膜组织，需要通过牙科医疗中的口腔黏膜疾病治疗来维护,1\n29,根尖周病,根尖周病是牙齿根尖周围组织的炎症，通常需要通过牙科医疗中的根尖周病治疗来解决,1\n34,牙周疾病,,1\n28,牙髓炎,牙髓炎是牙齿内部的炎症，通常需要通过牙科医疗中的牙髓炎治疗来解决,1\n31,面部,面部是口腔外部的一部分，需要通过牙科医疗中的面部小手术等来处理,1\n32,颌面部,颌面部是口腔外部的一部分，需要通过牙科医疗中的颌面部肿瘤手术和颌面部创伤治疗来处理,1\n33,错畸形,错畸形是牙齿排列不齐的一种情况，通常需要通过牙科医疗中的错畸形的治疗来解决,1\n\n\n-----Relationships-----\nhuman_readable_id,source,target,description,rank\n0,牙科医疗,口腔内科,口腔内科是牙科医疗的一个分类,23\n1,牙科医疗,口腔外科,口腔外科是牙科医疗的一个分类,23\n2,牙科医疗,口腔修复科,口腔修复科是牙科医疗的一个分类,22\n4,牙科医疗,其他分类,其他分类是牙科医疗的一个分类,22\n3,牙科医疗,口腔正畸科,口腔正畸科是牙科医疗的一个分类,21\n11,牙科医疗,牙齿矫正,牙齿矫正是牙科医疗需要处理的一种治疗项目,19\n13,牙科医疗,预防性正畸治疗,预防性正畸治疗是牙科医疗需要处理的一种治疗项目,19\n14,牙科医疗,牙齿美白,牙齿美白是牙科医疗需要处理的一种治疗项目,19\n15,牙科医疗,牙齿贴面,牙齿贴面是牙科医疗需要处理的一种治疗项目,19\n16,牙科医疗,牙齿清洁与维护,牙齿清洁与维护是牙科医疗需要处理的一种治疗项目,19\n8,牙科医疗,口腔黏膜,口腔黏膜是牙科医疗需要处理的一部分,18\n7,牙科医疗,根尖周病,根尖周病是牙科医疗需要处理的一种疾病,18\n5,牙科医疗,牙周疾病,牙周疾病是牙科医疗需要处理的一种疾病,18\n6,牙科医疗,牙髓炎,牙髓炎是牙科医疗需要处理的一种疾病,18\n9,牙科医疗,面部,面部是牙科医疗需要处理的一部分,18\n10,牙科医疗,颌面部,颌面部是牙科医疗需要处理的一部分,18\n12,牙科医疗,错畸形,错畸形是牙科医疗需要处理的一种治疗项目,18\n\n\n报告应包括以下部分：\n\n- 标题：代表其关键实体的社区名称 - 标题应简短但具体。如有可能，请在标题中包含代表性命名实体。\n- 摘要：对社区整体结构的执行摘要，描述其实体之间的关系以及与其实体相关的重要点。\n- 报告评分：一个介于0到10之间的浮动分数，表示文本与牙科医疗、社区分析、网络和病人教育的相关性，1表示微不足道或无关紧要，10表示在促进牙科健康和社区理解方面高度重要、具有影响力和可操作性。\n- 评分解释：给出评分的简短解释一句话。\n- 详细发现：关于该社区的5-10个关键见解列表。每个见解应包含简短总结，后跟多段根据以下规则的解释文本。务必全面。\n\n将输出作为格式良好的JSON格式字符串返回，格式应如下所示。请不要使用任何不必要的转义序列。输出应为一个单一的JSON对象，便于通过json.loads解析。\n    {{\n        \"title\": <报告标题>,\n        \"summary\": <执行摘要>,\n        \"rating\": <影响严重性评分>,\n        \"rating_explanation\": <评分解释>,\n        \"findings\": [\n            {{\n                \"summary\":<见解_1_摘要>,\n                \"explanation\": <见解_1_说明>\n            }},\n            {{\n                \"summary\":<见解_2_摘要>,\n                \"explanation\": <见解_2_说明>\n            }}\n        ]\n    }}\n\n# 基础规则\n由数据支持的点应按以下方式列出其数据引用：\n\n“这是一句由多个数据引用支持的示例句子[Data: <数据集名称>（记录 ID）; <数据集名称>（记录 ID）]。”\n\n请勿在单个引用中列出超过 5 个记录 ID。相反，请列出前五个最相关的记录 ID，并添加“+more”以指示还有更多。\n\n例如：\n“人员 X 是公司 Y 的所有者，受到许多不当行为指控[Data: 报告（1），实体（5、7）; 关系（23）; 声明（7、2、34、64、46，+more）]。”\n\n其中 1、5、7、23、2、34、46 和 64 分别代表相应数据记录的 ID（而不是索引）。\n\n请勿包括未提供支持证据的信息。\n\n输出：\n"}}
