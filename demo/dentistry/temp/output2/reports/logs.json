{"type": "error", "data": "Error emitting table", "stack": "Traceback (most recent call last):\n  File \"/home/zxd/code/Chat/graphrag/graphrag/index/emit/parquet_table_emitter.py\", line 40, in emit\n    await self._storage.set(filename, data.to_parquet())\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pandas/util/_decorators.py\", line 333, in wrapper\n    return func(*args, **kwargs)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pandas/core/frame.py\", line 3113, in to_parquet\n    return to_parquet(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pandas/io/parquet.py\", line 480, in to_parquet\n    impl.write(\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pandas/io/parquet.py\", line 190, in write\n    table = self.api.Table.from_pandas(df, **from_pandas_kwargs)\n  File \"pyarrow/table.pxi\", line 3874, in pyarrow.lib.Table.from_pandas\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pyarrow/pandas_compat.py\", line 611, in dataframe_to_arrays\n    arrays = [convert_column(c, f)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pyarrow/pandas_compat.py\", line 611, in <listcomp>\n    arrays = [convert_column(c, f)\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pyarrow/pandas_compat.py\", line 598, in convert_column\n    raise e\n  File \"/home/zxd/.conda/envs/grag/lib/python3.10/site-packages/pyarrow/pandas_compat.py\", line 592, in convert_column\n    result = pa.array(col, type=type_, from_pandas=True, safe=safe)\n  File \"pyarrow/array.pxi\", line 339, in pyarrow.lib.array\n  File \"pyarrow/array.pxi\", line 85, in pyarrow.lib._ndarray_to_array\n  File \"pyarrow/error.pxi\", line 91, in pyarrow.lib.check_status\npyarrow.lib.ArrowInvalid: ('cannot mix list and non-list, non-null values', 'Conversion failed for column findings with type object')\n", "source": "('cannot mix list and non-list, non-null values', 'Conversion failed for column findings with type object')", "details": null}
